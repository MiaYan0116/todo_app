@import "tailwindcss";

@layer base {
  :root {
    --background: #ffffff;
    --foreground: #0a0a0a;
    --card: #ffffff;
    --card-foreground: #0a0a0a;

    --primary: #0a0a0a;
    --primary-foreground: #ffffff;
    --secondary: #f3f4f6;
    --secondary-foreground: #0a0a0a;
    --destructive: #ef4444;
    --destructive-foreground: #ffffff;
    --accent: #f4f4f5;
    --accent-foreground: #0a0a0a;
    --muted: #e4e4e7;
    --muted-foreground: #71717a;
    --input: #e5e7eb;
    --ring: #2563eb;
  }
  .dark {
    --background: #0f1115;
    --foreground: #f5f6f8;
    --card: #0f1115;
    --card-foreground: #f5f6f8;

    --primary: #f5f6f8;
    --primary-foreground: #0f1115;
    --secondary: #27272a;
    --secondary-foreground: #f5f6f8;
    --destructive: #b91c1c;
    --destructive-foreground: #ffffff;
    --accent: #1f2937;
    --accent-foreground: #f5f6f8;
    --muted: #3f3f46;
    --muted-foreground: #a1a1aa;
    --input: #3f3f46;
    --ring: #60a5fa;
  }
}

@layer utilities {
  .bg-background { background-color: var(--background); }
  .text-foreground { color: var(--foreground); }

  .bg-card { background-color: var(--card); }
  .text-card-foreground { color: var(--card-foreground); }

  /* Define CSS variable mappings so Tailwind utility classes like `bg-primary` and `text-primary-foreground` can correctly resolve to custom theme colors.*/
  .bg-primary { background-color: var(--primary); }
  .text-primary-foreground { color: var(--primary-foreground); }

  .bg-secondary { background-color: var(--secondary); }
  .text-secondary-foreground { color: var(--secondary-foreground); }

  .bg-destructive { background-color: var(--destructive); }
  .text-destructive-foreground { color: var(--destructive-foreground); }

  .bg-accent { background-color: var(--accent); }
  .text-accent-foreground { color: var(--accent-foreground); }

  .bg-muted { background-color: var(--muted); }
  .text-muted-foreground { color: var(--muted-foreground); }

  .bg-input { background-color: var(--input); }
  .border-input { border-color: var(--input); }

  .ring-ring { --tw-ring-color: var(--ring); }
}
